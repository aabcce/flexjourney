<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/halo" width="100%" height="100%" 
		 creationComplete="group1_creationCompleteHandler(event)" 
		 show="group1_showHandler(event)" xmlns:jyattendagent="services.jyattendagent.*" 
		 xmlns:jymessageagent="services.jymessageagent.*">
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.messaging.events.MessageEvent;
			import mx.rpc.events.ResultEvent;
			
			import mx.messaging.channels.StreamingAMFChannel;
			import mx.messaging.ChannelSet;
			import mx.messaging.channels.RTMPChannel;
			import mx.messaging.channels.AMFChannel;
			import mx.messaging.events.MessageEvent;
			import mx.messaging.messages.AsyncMessage;
			import mx.messaging.messages.IMessage;
			
			import journey.model.ModelLocator;
			[Bindable]
			private var model:ModelLocator = ModelLocator.getInstance();
			
			protected function onMessage(event:mx.messaging.events.MessageEvent):void
			{
				msgContent.text += model.currUser.email + " 在 [" + new Date(event.message.timestamp).toLocaleTimeString() + "] 说: \n" + 
					event.message.body.toString() + "\n";
			}
			
			protected function sendMessage():void{
				var message:IMessage = new AsyncMessage();
				message.body = msg.text.substr(0,200);
				producer.send(message);
				msg.text = "";
			}

			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				
				var myRTMP:RTMPChannel = new RTMPChannel("my-rtmp", "rtmp://{server.name}:2039");
				var myStreamingAMF:AMFChannel = new StreamingAMFChannel("my-streaming-amf", "../messagebroker/streamingamf");
				var myPollingAMF:AMFChannel = new AMFChannel("my-polling-amf", "../messagebroker/amfpolling");
				myPollingAMF.pollingEnabled = true;
				myPollingAMF.pollingInterval = 2000;
				var channelSet:ChannelSet = new ChannelSet();
				channelSet.addChannel(myRTMP);
				channelSet.addChannel(myStreamingAMF);
				channelSet.addChannel(myPollingAMF);
				consumer.channelSet = channelSet;
				producer.channelSet = channelSet;
			}
		
			protected function group1_showHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				var partid:int = model.currParty.partyid;
								
				isCurrUserAttended.token = jyAttendAgent.isCurrUserAttended(partid.toString());
								
				startMessageResult.token = jyMessageAgent.startMessage("partid" + partid.toString());
			}
			
			protected function startMessageResult_resultHandler(event:ResultEvent):void
			{
				if (consumer && consumer.subscribed)
				{
					msgContent.text += "离开 " + consumer.destination + "\r\n";	
					consumer.unsubscribe();
				}
				
				var partid:int = model.currParty.partyid;
				var name:String = "聚会" + partid.toString();
				
				consumer.destination = name;
				producer.destination = name;
				consumer.subscribe();
				msgContent.text += "进入" + name + "\r\n";				
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>		
		<s:Producer id="producer">			
		</s:Producer>
		<s:Consumer id="consumer" message="onMessage(event)">			
		</s:Consumer>		
		<fx:Boolean id="attended" />
		<jyattendagent:JyAttendAgent id="jyAttendAgent" fault="Alert.show(event.fault.faultString)"/>		
		<s:CallResponder id="isCurrUserAttended" result="attended=isCurrUserAttended.lastResult"/>
		<jymessageagent:JyMessageAgent id="jyMessageAgent" fault="Alert.show(event.fault.faultString)"/>
		<s:CallResponder id="startMessageResult" result="startMessageResult_resultHandler(event)"/>
	</fx:Declarations>
	
	<mx:DividedBox direction="horizontal" height="80%" width="100%">
		<s:TextArea id="msgContent" width="80%" height="100%" editable="false">
			
		</s:TextArea>
	</mx:DividedBox>

	<mx:ControlBar width="100%" height="80">
		<mx:ViewStack selectedIndex="{attended?1:0}" width="100%" height="80">
			<mx:HBox width="100%">
				<mx:Text text="参与后方能发言哟！" visible="{!attended}" />
			</mx:HBox>
			<mx:HBox width="100%">			
				<mx:TextArea id="msg" height="32" width="80%">					
				</mx:TextArea>
				<s:Button label="发送" click="sendMessage()" enabled="{msg.text.length > 0}"  id="button"/>
			</mx:HBox>
		</mx:ViewStack>
		
	</mx:ControlBar>
</mx:VBox>
